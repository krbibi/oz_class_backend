운영체제

운영체제란 사용자가 사용하는 것에 기대에 맞게 수행할 수 있도록 도와주는 창구역할을 하는 시스템 소프트웨어



운영체제 역할

프로세스 관리 : 프로세스 (실행중인 프로그램) / 운영체제 : 충돌없이 잘 진행할 수 있도록 함
메모리 관리 : 메모리 : 파일 프로그램 데이터 등 저장 / 운영체제는 사용자가 사용할 데이터를 메모리에 적절히 배치
파일 시스템 관리 : 파일시스템 : 파일들을 묶어 폴더(디렉토리 형태) 이러한 관리체계를 파일 시스템 /  


운영체제가 제공하는 핵심 기능 프로세스,메모리,저장장치 관리 기능을 커널이 제공

커널 : 핵심적이고 중요하여 사용자가 직접 접근할 수 없게되어있음
대신 커널이 제공하는 핵심 기능을 사용하기 위해 요청하면 CLI (텍스트로 된 명령어로 커널과 상호작용)
 GUI(바탕화면 클릭하여 이용) 를 사용할 수 있음


# - cpu(컴퓨터의두뇌):이유(컴퓨터내부에서 주요 연산처리 그 중에서 연산 담당 파트는 ALU)의 구성요소 ALU, CU 그리고 레지스터 각각의 역할을 간략히 정리
ALU(Arithmetic and logical unit) : 산술논리연산자 연산담당파트 (산술:덧,뺄 / 논리 : and, or)
CU(control unit): 연산할 명령을 해석하는 (c나 자바같은 컴파일 언어로 작성한 코드를 컴파일하면 실행파일 만들어짐)
이 실행파일에는 cpu에게 일을 시키기위한 명령어가 저장되어있음 이런 명령어가 실행파일이 실행되어서 cpu에게 전달되어
레지스터 : 데이터를 처리하기 위해 필요한 임시 저장장치 
=> Cpu 에게 0,1로 된 명령어가  전달되면 이를 해석하기위해 cu 가 이를 해석하고 이 결과를 alu에게 무엇을 연산해야하는지 전달함
=> 명령어를 해석했을때 1더하기 2라는 내용을 전달하여 alu가 연산을 하는중에 추가 명령어가 전달되면 그 명령어는 이전 명령어가 연산이 끝날때까지 레지스터에 임시 저장됨

레지스터 6가지

프로그램 카운터 - 메모리에서 가져다가 실행할 다음명령에 주소를 일시적으로 저장 ( 1더하기 2하고 있으면 다음에 3더하기 4를 해야하니 미리 저장해둠)
인스트럭션 레지스터 - 방금 전 메인 메모리에서 가져와 이제 해석해야하는 레지스터 ( 프로그램 카운터가 주소를 저장하는것이니 이 주소에서 가져온 명령어가 잠시 머무르는 곳)
어드레스 레지스터 - cpu가 읽고자하는 주소값을 보내고자할때
버퍼 레지스터 - 주고받는 데이터가 쏘기 위해 버퍼링 과정이 필요하며 그 버퍼링을 위해서 사용하는 레지스터 
플래그 레지스터 - 연산결과 또는 cpu 상태에 대한 부가적인 정보를 저장하는 레지스터
스택 포인터 - 스택이란 지역변수나 매개변수를 저장하기 위해 사용하는 메모리 영역의이름 / 메모리에서 다음에 꺼내써야할 데이터가 어디에 있는지 알려주는 레지스터


# - 메인 메모리와 보조기억장치의 차이 설명
메인 메모리 : 프로그램 실행 파일이 올라가 실행되는 영역 /
보조기억장치 :  워드,게임 같은 응용프로그램은 hdd sdd 에 저장되는게 보통 / 이것들을 실행하게 되면 프로세스 -> 
그때되서 메인 메모리에 올라가서 공간을 사용

# - 버스 시스템은 데이터를 주고받기위한 경로, 데이터의 종류에 따라 세가지로 구분되는데 그 세가지가 무엇인지

버스
데이터버스 : 데이터 이동을 위해 필요한 버스
컨트롤버스 : cpu가 원하는 바를 메모리에 전달하기 위한 버스
어드레스버스 : 주소값을 이동하기 위해 필요한 버스


클럭펄스 : 시스템 동기화를 위해 존재하는 클럭 펄스

프로그램 실행 과정

프로그램 코드 -> 어셈블리 코드 -> 바이너리 코드
( 프로그래밍 언어로 코드를 짬 -> 컴파일하여 컴퓨터 친화적인 코드로 변경 -> 0과 1로 이루어진 코드로 변경 )

바이너리 코드 실행과정
( 실행파일 -> 메모리 -> cpu에 순차적으로 진행)

인터럽트 : cpu가 작업을 수행하고 있을 때 cpu의 작업을방해하는 신호를 인터럽트라고 함